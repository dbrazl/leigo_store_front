{"ast":null,"code":"import produce from \"immer\";\nimport _ from \"lodash\";\nconst INITIAL_STATE = {\n  products: [],\n  total: 0,\n  amount: 0\n};\nexport default function cart(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case \"@cart/ADD_TO_CART\":\n        let oneAdd = state.products.find(item => item.id === action.payload.item.id);\n\n        add: {\n          if (!!oneAdd && oneAdd.stock < oneAdd.amount + 1) break add;\n\n          if (!!oneAdd) {\n            oneAdd.amount++;\n\n            const unionAdd = _.unionBy([oneAdd], state.products, \"id\");\n\n            draft.products = _.orderBy(unionAdd, [\"name\"], [\"asc\"]);\n            draft.total += action.payload.item.unit_price;\n            draft.amount = state.amount + 1;\n            break add;\n          }\n\n          let toAdd = action.payload.item;\n          toAdd.amount = 1;\n\n          const unionAdd = _.unionBy([toAdd], state.products, \"id\");\n\n          draft.products = _.orderBy(unionAdd, [\"name\"], [\"asc\"]);\n          draft.total += action.payload.item.unit_price;\n          draft.amount = state.amount + 1;\n        }\n\n        break;\n\n      case \"@cart/REMOVE_ONE_FROM_CART\":\n        let oneRemove = state.products.find(item => item.id === action.payload.item.id);\n\n        if (!!oneRemove && oneRemove.amount > 0) {\n          oneRemove.amount--;\n          if (oneRemove.amount === 0) draft.products = _.differenceBy(state.products, [oneRemove], \"id\");else {\n            const unionRemoveOne = _.unionBy([oneRemove], state.products, \"id\");\n\n            draft.products = _.orderBy(unionRemoveOne, [\"name\"], [\"asc\"]);\n          }\n        } else {\n          draft.products = _.differenceBy(state.products, [action.payload.item], \"id\");\n        }\n\n        if (state.total > 0) draft.total -= action.payload.item.unit_price;\n        if (state.amount > 0) draft.amount = state.amount - 1;\n        break;\n\n      case \"@cart/REMOVE_FROM_CART\":\n        const one = state.products.find(item => item.id === action.payload.item.id);\n\n        if (!!one) {\n          draft.products = _.differenceBy(state.products, [action.payload.item], \"id\");\n          draft.total -= one.unit_price * one.amount;\n          draft.amount = state.amount - one.amount;\n        }\n\n        break;\n\n      default:\n    }\n  });\n}","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/cart/reducer.js"],"names":["produce","_","INITIAL_STATE","products","total","amount","cart","state","action","draft","type","oneAdd","find","item","id","payload","add","stock","unionAdd","unionBy","orderBy","unit_price","toAdd","oneRemove","differenceBy","unionRemoveOne","one"],"mappings":"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","sourcesContent":["import produce from \"immer\";\nimport _ from \"lodash\";\n\nconst INITIAL_STATE = {\n  products: [],\n  total: 0,\n  amount: 0,\n};\n\nexport default function cart(state = INITIAL_STATE, action) {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case \"@cart/ADD_TO_CART\":\n        let oneAdd = state.products.find(\n          (item) => item.id === action.payload.item.id\n        );\n\n        add: {\n          if (!!oneAdd && oneAdd.stock < oneAdd.amount + 1) break add;\n\n          if (!!oneAdd) {\n            oneAdd.amount++;\n            const unionAdd = _.unionBy([oneAdd], state.products, \"id\");\n            draft.products = _.orderBy(unionAdd, [\"name\"], [\"asc\"]);\n            draft.total += action.payload.item.unit_price;\n            draft.amount = state.amount + 1;\n            break add;\n          }\n\n          let toAdd = action.payload.item;\n          toAdd.amount = 1;\n\n          const unionAdd = _.unionBy([toAdd], state.products, \"id\");\n          draft.products = _.orderBy(unionAdd, [\"name\"], [\"asc\"]);\n          draft.total += action.payload.item.unit_price;\n          draft.amount = state.amount + 1;\n        }\n        break;\n\n      case \"@cart/REMOVE_ONE_FROM_CART\":\n        let oneRemove = state.products.find(\n          (item) => item.id === action.payload.item.id\n        );\n\n        if (!!oneRemove && oneRemove.amount > 0) {\n          oneRemove.amount--;\n\n          if (oneRemove.amount === 0)\n            draft.products = _.differenceBy(state.products, [oneRemove], \"id\");\n          else {\n            const unionRemoveOne = _.unionBy([oneRemove], state.products, \"id\");\n            draft.products = _.orderBy(unionRemoveOne, [\"name\"], [\"asc\"]);\n          }\n        } else {\n          draft.products = _.differenceBy(\n            state.products,\n            [action.payload.item],\n            \"id\"\n          );\n        }\n\n        if (state.total > 0) draft.total -= action.payload.item.unit_price;\n        if (state.amount > 0) draft.amount = state.amount - 1;\n        break;\n\n      case \"@cart/REMOVE_FROM_CART\":\n        const one = state.products.find(\n          (item) => item.id === action.payload.item.id\n        );\n\n        if (!!one) {\n          draft.products = _.differenceBy(\n            state.products,\n            [action.payload.item],\n            \"id\"\n          );\n          draft.total -= one.unit_price * one.amount;\n          draft.amount = state.amount - one.amount;\n        }\n\n        break;\n      default:\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}