{"ast":null,"code":"import { all, takeLatest, put, call, race, select } from \"redux-saga/effects\";\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\nimport { indexProductsRequest, indexProductsSuccess, productsFailure, resetPage } from \"./actions\";\n\nfunction* indexProducts() {\n  try {\n    const page = yield select(state => state.products.page);\n\n    const _ref = yield race({\n      response: call(api.get, \"/products?page=\".concat(page)),\n      timeout: call(timer)\n    }),\n          response = _ref.response;\n\n    yield put(indexProductsSuccess(response.data));\n    yield put(indexProductsRequest());\n  } catch (error) {\n    yield pur(resetPage());\n    yield errorHandler(error, productsFailure());\n  }\n}\n\nexport default all([takeLatest(\"@products/INDEX_PRODUCTS_REQUEST\", indexProducts)]);","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/products/saga.js"],"names":["all","takeLatest","put","call","race","select","errorHandler","timer","indexProductsRequest","indexProductsSuccess","productsFailure","resetPage","indexProducts","page","state","products","response","api","get","timeout","data","error","pur"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,MAA3C,QAAyD,oBAAzD;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,eAHF,EAIEC,SAJF,QAKO,WALP;;AAOA,UAAUC,aAAV,GAA0B;AACxB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMR,MAAM,CAAES,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,IAA3B,CAAzB;;AADE,iBAGmB,MAAMT,IAAI,CAAC;AAC9BY,MAAAA,QAAQ,EAAEb,IAAI,CAACc,GAAG,CAACC,GAAL,2BAA4BL,IAA5B,EADgB;AAE9BM,MAAAA,OAAO,EAAEhB,IAAI,CAACI,KAAD;AAFiB,KAAD,CAH7B;AAAA,UAGMS,QAHN,QAGMA,QAHN;;AAQF,UAAMd,GAAG,CAACO,oBAAoB,CAACO,QAAQ,CAACI,IAAV,CAArB,CAAT;AACA,UAAMlB,GAAG,CAACM,oBAAoB,EAArB,CAAT;AACD,GAVD,CAUE,OAAOa,KAAP,EAAc;AACd,UAAMC,GAAG,CAACX,SAAS,EAAV,CAAT;AACA,UAAML,YAAY,CAACe,KAAD,EAAQX,eAAe,EAAvB,CAAlB;AACD;AACF;;AAED,eAAeV,GAAG,CAAC,CACjBC,UAAU,CAAC,kCAAD,EAAqCW,aAArC,CADO,CAAD,CAAlB","sourcesContent":["import { all, takeLatest, put, call, race, select } from \"redux-saga/effects\";\n\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\n\nimport {\n  indexProductsRequest,\n  indexProductsSuccess,\n  productsFailure,\n  resetPage,\n} from \"./actions\";\n\nfunction* indexProducts() {\n  try {\n    const page = yield select((state) => state.products.page);\n\n    const { response } = yield race({\n      response: call(api.get, `/products?page=${page}`),\n      timeout: call(timer),\n    });\n\n    yield put(indexProductsSuccess(response.data));\n    yield put(indexProductsRequest());\n  } catch (error) {\n    yield pur(resetPage());\n    yield errorHandler(error, productsFailure());\n  }\n}\n\nexport default all([\n  takeLatest(\"@products/INDEX_PRODUCTS_REQUEST\", indexProducts),\n]);\n"]},"metadata":{},"sourceType":"module"}