{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/pages/Payament/components/DesktopForm/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../../../../components/Header\";\nimport { Container, Column, FlipCard, FlipCardInner, CardFront, CardBack, Form, WrapperInput, SmallLabel, CardInput, Row, CVVInput, DateInput, Input, Buttons, Back, Button, CreditCard, Flag, NameCard, WrapperDate, ValidDate, CardNumber, Emblem, Bar, CVV } from \"./styles\";\n\nfunction DesktopForm({\n  rotate,\n  cardNumber,\n  setCardNumber,\n  cvv,\n  setCvv,\n  valid,\n  setValid,\n  onGrantLostFocus\n}) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FlipCard, {\n    rotate: rotate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FlipCardInner, {\n    rotate: rotate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CardFront, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Emblem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(CardNumber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, cardNumber), React.createElement(WrapperDate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    fontSize: 12,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"VALID\"), React.createElement(ValidDate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, valid)), React.createElement(NameCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, name.toUpperCase()), React.createElement(Flag, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(CardBack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(CVV, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, cvv))))), React.createElement(Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(WrapperInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"n\\xFAmero do cart\\xE3o\"), React.createElement(CardInput, {\n    placeholder: \"0000 0000 0000 0000\",\n    onChange: event => setCardNumber(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(Row, {\n    marginTop: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(WrapperInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"CVV\"), React.createElement(CVVInput, {\n    placeholder: \"000\",\n    onChange: event => setCvv(event.target.value),\n    onFocus: () => onGrantLostFocus(),\n    onBlur: () => onGrantLostFocus(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(WrapperInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"expira\\xE7\\xE3o\"), React.createElement(DateInput, {\n    placeholder: \"00/0000\",\n    onChange: event => setValid(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))), React.createElement(WrapperInput, {\n    marginTop: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"nome do propriet\\xE1rio\"), React.createElement(Input, {\n    placeholder: \"nome do propriet\\xE1rio\",\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })))), React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Back, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"voltar\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(CreditCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))));\n}\n\nDesktopForm.propTypes = {\n  rotate: PropTypes.bool,\n  cardNumber: PropTypes.string,\n  setCardNumber: PropTypes.func,\n  cvv: PropTypes.string,\n  setCvv: PropTypes.func,\n  valid: PropTypes.string,\n  setValid: PropTypes.func,\n  name: PropTypes.string,\n  setName: PropTypes.func,\n  onGrantLostFocus: PropTypes.func\n};\nDesktopForm.defaultProps = {\n  rotate: false,\n  cardNumber: \"\",\n  setCardNumber: () => {},\n  cvv: \"000\",\n  setCvv: () => {},\n  valid: \"00/0000\",\n  setValid: () => {},\n  name: \"nome do proprietÃ¡rio\",\n  setName: () => {},\n  onGrantLostFocus: () => {}\n};\nexport default DesktopForm;","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/pages/Payament/components/DesktopForm/index.js"],"names":["React","PropTypes","Header","Container","Column","FlipCard","FlipCardInner","CardFront","CardBack","Form","WrapperInput","SmallLabel","CardInput","Row","CVVInput","DateInput","Input","Buttons","Back","Button","CreditCard","Flag","NameCard","WrapperDate","ValidDate","CardNumber","Emblem","Bar","CVV","DesktopForm","rotate","cardNumber","setCardNumber","cvv","setCvv","valid","setValid","onGrantLostFocus","name","toUpperCase","event","target","value","setName","propTypes","bool","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"../../../../components/Header\";\nimport {\n  Container,\n  Column,\n  FlipCard,\n  FlipCardInner,\n  CardFront,\n  CardBack,\n  Form,\n  WrapperInput,\n  SmallLabel,\n  CardInput,\n  Row,\n  CVVInput,\n  DateInput,\n  Input,\n  Buttons,\n  Back,\n  Button,\n  CreditCard,\n  Flag,\n  NameCard,\n  WrapperDate,\n  ValidDate,\n  CardNumber,\n  Emblem,\n  Bar,\n  CVV,\n} from \"./styles\";\n\nfunction DesktopForm({\n  rotate,\n  cardNumber,\n  setCardNumber,\n  cvv,\n  setCvv,\n  valid,\n  setValid,\n  onGrantLostFocus,\n}) {\n  return (\n    <Container>\n      <Column>\n        <FlipCard rotate={rotate}>\n          <FlipCardInner rotate={rotate}>\n            <CardFront>\n              <Emblem />\n              <CardNumber>{cardNumber}</CardNumber>\n              <WrapperDate>\n                <SmallLabel fontSize={12} color=\"#fff\">\n                  VALID\n                </SmallLabel>\n                <ValidDate>{valid}</ValidDate>\n              </WrapperDate>\n              <NameCard>{name.toUpperCase()}</NameCard>\n              <Flag />\n            </CardFront>\n            <CardBack>\n              <Bar />\n              <CVV>{cvv}</CVV>\n            </CardBack>\n          </FlipCardInner>\n        </FlipCard>\n      </Column>\n      <Column>\n        <Form>\n          <WrapperInput>\n            <SmallLabel>nÃºmero do cartÃ£o</SmallLabel>\n            <CardInput\n              placeholder=\"0000 0000 0000 0000\"\n              onChange={(event) => setCardNumber(event.target.value)}\n            />\n          </WrapperInput>\n          <Row marginTop={30}>\n            <WrapperInput>\n              <SmallLabel>CVV</SmallLabel>\n              <CVVInput\n                placeholder=\"000\"\n                onChange={(event) => setCvv(event.target.value)}\n                onFocus={() => onGrantLostFocus()}\n                onBlur={() => onGrantLostFocus()}\n              />\n            </WrapperInput>\n            <WrapperInput>\n              <SmallLabel>expiraÃ§Ã£o</SmallLabel>\n              <DateInput\n                placeholder=\"00/0000\"\n                onChange={(event) => setValid(event.target.value)}\n              />\n            </WrapperInput>\n          </Row>\n          <WrapperInput marginTop={30}>\n            <SmallLabel>nome do proprietÃ¡rio</SmallLabel>\n            <Input\n              placeholder=\"nome do proprietÃ¡rio\"\n              onChange={(event) => setName(event.target.value)}\n            />\n          </WrapperInput>\n        </Form>\n      </Column>\n      <Buttons>\n        <Back>voltar</Back>\n        <Button>\n          <CreditCard />\n        </Button>\n      </Buttons>\n    </Container>\n  );\n}\n\nDesktopForm.propTypes = {\n  rotate: PropTypes.bool,\n  cardNumber: PropTypes.string,\n  setCardNumber: PropTypes.func,\n  cvv: PropTypes.string,\n  setCvv: PropTypes.func,\n  valid: PropTypes.string,\n  setValid: PropTypes.func,\n  name: PropTypes.string,\n  setName: PropTypes.func,\n  onGrantLostFocus: PropTypes.func,\n};\n\nDesktopForm.defaultProps = {\n  rotate: false,\n  cardNumber: \"\",\n  setCardNumber: () => {},\n  cvv: \"000\",\n  setCvv: () => {},\n  valid: \"00/0000\",\n  setValid: () => {},\n  name: \"nome do proprietÃ¡rio\",\n  setName: () => {},\n  onGrantLostFocus: () => {},\n};\n\nexport default DesktopForm;\n"]},"metadata":{},"sourceType":"module"}