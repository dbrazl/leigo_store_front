{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/pages/Payament/components/DesktopForm/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../../../../components/Header\";\nimport { Container, Column, FlipCard, FlipCardInner, CardFront, CardBack, Form, WrapperInput, SmallLabel, CardInput, Row, CVVInput, DateInput, Input, Footer, Back, Button, CreditCard, Flag, NameCard, WrapperDate, ValidDate, CardNumber, Emblem, Bar, CVV, Sell, Quantity, Total, Buttons, Centralize, Baseline, Dolar } from \"./styles\";\n\nfunction DesktopForm({\n  rotate,\n  cardNumber,\n  setCardNumber,\n  cvv,\n  setCvv,\n  valid,\n  setValid,\n  name,\n  setName,\n  onGrantLostFocus\n}) {\n  function renderBillet() {\n    return React.createElement(React.Fragment, null, React.createElement(Centralize, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Baseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Quantity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"4\"), React.createElement(SmallLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"items\")), React.createElement(Baseline, {\n      marginTop: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Total, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"R$ 260,00\"))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Buttons, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Back, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"voltar\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Dolar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))));\n  }\n\n  function renderCreditCard() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(FlipCard, {\n      rotate: rotate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FlipCardInner, {\n      rotate: rotate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(CardFront, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Emblem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(CardNumber, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, cardNumber), React.createElement(WrapperDate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(SmallLabel, {\n      fontSize: 12,\n      color: \"#fff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"VALID\"), React.createElement(ValidDate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, valid)), React.createElement(NameCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, name.toUpperCase()), React.createElement(Flag, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(CardBack, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(CVV, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, cvv))))), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(WrapperInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(SmallLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"n\\xFAmero do cart\\xE3o\"), React.createElement(CardInput, {\n      placeholder: \"0000 0000 0000 0000\",\n      onChange: event => setCardNumber(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Row, {\n      marginTop: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(WrapperInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(SmallLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"CVV\"), React.createElement(CVVInput, {\n      placeholder: \"000\",\n      onChange: event => setCvv(event.target.value),\n      onFocus: () => onGrantLostFocus(),\n      onBlur: () => onGrantLostFocus(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(WrapperInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(SmallLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"expira\\xE7\\xE3o\"), React.createElement(DateInput, {\n      placeholder: \"00/0000\",\n      onChange: event => setValid(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))), React.createElement(WrapperInput, {\n      marginTop: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(SmallLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"nome do propriet\\xE1rio\"), React.createElement(Input, {\n      placeholder: \"nome do propriet\\xE1rio\",\n      onChange: event => setName(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Sell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Quantity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"4\"), React.createElement(SmallLabel, {\n      fontSize: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"items\"), React.createElement(Total, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"R$ 260,00\")), React.createElement(Buttons, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Back, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"voltar\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(CreditCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))));\n  }\n\n  return renderBillet();\n}\n\nDesktopForm.propTypes = {\n  rotate: PropTypes.bool,\n  cardNumber: PropTypes.string,\n  setCardNumber: PropTypes.func,\n  cvv: PropTypes.string,\n  setCvv: PropTypes.func,\n  valid: PropTypes.string,\n  setValid: PropTypes.func,\n  name: PropTypes.string,\n  setName: PropTypes.func,\n  onGrantLostFocus: PropTypes.func\n};\nDesktopForm.defaultProps = {\n  rotate: false,\n  cardNumber: \"\",\n  setCardNumber: () => {},\n  cvv: \"000\",\n  setCvv: () => {},\n  valid: \"00/0000\",\n  setValid: () => {},\n  name: \"nome do proprietÃ¡rio\",\n  setName: () => {},\n  onGrantLostFocus: () => {}\n};\nexport default DesktopForm;","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/pages/Payament/components/DesktopForm/index.js"],"names":["React","PropTypes","Header","Container","Column","FlipCard","FlipCardInner","CardFront","CardBack","Form","WrapperInput","SmallLabel","CardInput","Row","CVVInput","DateInput","Input","Footer","Back","Button","CreditCard","Flag","NameCard","WrapperDate","ValidDate","CardNumber","Emblem","Bar","CVV","Sell","Quantity","Total","Buttons","Centralize","Baseline","Dolar","DesktopForm","rotate","cardNumber","setCardNumber","cvv","setCvv","valid","setValid","name","setName","onGrantLostFocus","renderBillet","renderCreditCard","toUpperCase","event","target","value","propTypes","bool","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"../../../../components/Header\";\nimport {\n  Container,\n  Column,\n  FlipCard,\n  FlipCardInner,\n  CardFront,\n  CardBack,\n  Form,\n  WrapperInput,\n  SmallLabel,\n  CardInput,\n  Row,\n  CVVInput,\n  DateInput,\n  Input,\n  Footer,\n  Back,\n  Button,\n  CreditCard,\n  Flag,\n  NameCard,\n  WrapperDate,\n  ValidDate,\n  CardNumber,\n  Emblem,\n  Bar,\n  CVV,\n  Sell,\n  Quantity,\n  Total,\n  Buttons,\n  Centralize,\n  Baseline,\n  Dolar,\n} from \"./styles\";\n\nfunction DesktopForm({\n  rotate,\n  cardNumber,\n  setCardNumber,\n  cvv,\n  setCvv,\n  valid,\n  setValid,\n  name,\n  setName,\n  onGrantLostFocus,\n}) {\n  function renderBillet() {\n    return (\n      <>\n        <Centralize>\n          <Baseline>\n            <Quantity>4</Quantity>\n            <SmallLabel>items</SmallLabel>\n          </Baseline>\n          <Baseline marginTop={30}>\n            <Total>R$ 260,00</Total>\n          </Baseline>\n        </Centralize>\n        <Footer>\n          <Buttons>\n            <Back>voltar</Back>\n            <Button>\n              <Dolar />\n            </Button>\n          </Buttons>\n        </Footer>\n      </>\n    );\n  }\n\n  function renderCreditCard() {\n    return (\n      <Container>\n        <Column>\n          <FlipCard rotate={rotate}>\n            <FlipCardInner rotate={rotate}>\n              <CardFront>\n                <Emblem />\n                <CardNumber>{cardNumber}</CardNumber>\n                <WrapperDate>\n                  <SmallLabel fontSize={12} color=\"#fff\">\n                    VALID\n                  </SmallLabel>\n                  <ValidDate>{valid}</ValidDate>\n                </WrapperDate>\n                <NameCard>{name.toUpperCase()}</NameCard>\n                <Flag />\n              </CardFront>\n              <CardBack>\n                <Bar />\n                <CVV>{cvv}</CVV>\n              </CardBack>\n            </FlipCardInner>\n          </FlipCard>\n        </Column>\n        <Column>\n          <Form>\n            <WrapperInput>\n              <SmallLabel>nÃºmero do cartÃ£o</SmallLabel>\n              <CardInput\n                placeholder=\"0000 0000 0000 0000\"\n                onChange={(event) => setCardNumber(event.target.value)}\n              />\n            </WrapperInput>\n            <Row marginTop={30}>\n              <WrapperInput>\n                <SmallLabel>CVV</SmallLabel>\n                <CVVInput\n                  placeholder=\"000\"\n                  onChange={(event) => setCvv(event.target.value)}\n                  onFocus={() => onGrantLostFocus()}\n                  onBlur={() => onGrantLostFocus()}\n                />\n              </WrapperInput>\n              <WrapperInput>\n                <SmallLabel>expiraÃ§Ã£o</SmallLabel>\n                <DateInput\n                  placeholder=\"00/0000\"\n                  onChange={(event) => setValid(event.target.value)}\n                />\n              </WrapperInput>\n            </Row>\n            <WrapperInput marginTop={30}>\n              <SmallLabel>nome do proprietÃ¡rio</SmallLabel>\n              <Input\n                placeholder=\"nome do proprietÃ¡rio\"\n                onChange={(event) => setName(event.target.value)}\n              />\n            </WrapperInput>\n          </Form>\n        </Column>\n        <Footer>\n          <Sell>\n            <Quantity>4</Quantity>\n            <SmallLabel fontSize={24}>items</SmallLabel>\n            <Total>R$ 260,00</Total>\n          </Sell>\n          <Buttons>\n            <Back>voltar</Back>\n            <Button>\n              <CreditCard />\n            </Button>\n          </Buttons>\n        </Footer>\n      </Container>\n    );\n  }\n  return renderBillet();\n}\n\nDesktopForm.propTypes = {\n  rotate: PropTypes.bool,\n  cardNumber: PropTypes.string,\n  setCardNumber: PropTypes.func,\n  cvv: PropTypes.string,\n  setCvv: PropTypes.func,\n  valid: PropTypes.string,\n  setValid: PropTypes.func,\n  name: PropTypes.string,\n  setName: PropTypes.func,\n  onGrantLostFocus: PropTypes.func,\n};\n\nDesktopForm.defaultProps = {\n  rotate: false,\n  cardNumber: \"\",\n  setCardNumber: () => {},\n  cvv: \"000\",\n  setCvv: () => {},\n  valid: \"00/0000\",\n  setValid: () => {},\n  name: \"nome do proprietÃ¡rio\",\n  setName: () => {},\n  onGrantLostFocus: () => {},\n};\n\nexport default DesktopForm;\n"]},"metadata":{},"sourceType":"module"}