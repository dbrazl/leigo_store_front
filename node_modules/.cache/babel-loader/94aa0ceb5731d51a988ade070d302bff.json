{"ast":null,"code":"import _slicedToArray from \"/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/pages/Cart/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"./view\";\n\nfunction Index() {\n  const _useState = useState(window.innerWidth),\n        _useState2 = _slicedToArray(_useState, 2),\n        width = _useState2[0],\n        setWidth = _useState2[1];\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", resizeEvent);\n    return () => window.removeEventListener(\"resize\", resizeEvent);\n  }, []);\n\n  function resizeEvent({\n    window\n  }) {\n    const innerWidth = window.target.innerWidth;\n    setWidth(innerWidth);\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n}\n\nexport default Index;","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/pages/Cart/index.js"],"names":["React","useState","useEffect","View","Index","window","innerWidth","width","setWidth","addEventListener","resizeEvent","removeEventListener","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,KAAT,GAAiB;AAAA,oBACWH,QAAQ,CAACI,MAAM,CAACC,UAAR,CADnB;AAAA;AAAA,QACRC,KADQ;AAAA,QACDC,QADC;;AAGfN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCC,WAAlC;AAEA,WAAO,MAAML,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCD,WAArC,CAAb;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASA,WAAT,CAAqB;AAAEL,IAAAA;AAAF,GAArB,EAAiC;AAAA,UACvBC,UADuB,GACRD,MAAM,CAACO,MADC,CACvBN,UADuB;AAE/BE,IAAAA,QAAQ,CAACF,UAAD,CAAR;AACD;;AAED,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport View from \"./view\";\n\nfunction Index() {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", resizeEvent);\n\n    return () => window.removeEventListener(\"resize\", resizeEvent);\n  }, []);\n\n  function resizeEvent({ window }) {\n    const { innerWidth } = window.target;\n    setWidth(innerWidth);\n  }\n\n  return <View />;\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}