{"ast":null,"code":"import { all, takeLatest, call, race, put } from \"redux-saga/effects\";\nimport { indexProductCategoriesSuccess, productCategoriesFailure } from \"./actions\";\nimport api from \"../../../services/api\";\nimport timer from \"../utils/timer\";\nimport errorHandler from \"../utils/errorHandler\";\n\nfunction* productCategories() {\n  const _ref = yield race({\n    response: call(api.get, \"/assign/category\"),\n    timeout: call(timer)\n  }),\n        response = _ref.response;\n\n  try {\n    console.tron.log(\"Aqui\");\n    console.tron.log(\"DATA\");\n    yield put(indexProductCategoriesSuccess(response.data));\n  } catch (error) {\n    console.tron.log(\"error\", error);\n    yield errorHandler(error, productCategoriesFailure);\n  }\n}\n\nexport default all([takeLatest(\"@productCategories/INDEX_PRODUCT_CATEGORIES_REQUEST\", productCategories)]);","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/productCategories/saga.js"],"names":["all","takeLatest","call","race","put","indexProductCategoriesSuccess","productCategoriesFailure","api","timer","errorHandler","productCategories","response","get","timeout","console","tron","log","data","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SACEC,6BADF,EAEEC,wBAFF,QAGO,WAHP;AAIA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,UAAUC,iBAAV,GAA8B;AAAA,eACP,MAAMP,IAAI,CAAC;AAC9BQ,IAAAA,QAAQ,EAAET,IAAI,CAACK,GAAG,CAACK,GAAL,EAAU,kBAAV,CADgB;AAE9BC,IAAAA,OAAO,EAAEX,IAAI,CAACM,KAAD;AAFiB,GAAD,CADH;AAAA,QACpBG,QADoB,QACpBA,QADoB;;AAK5B,MAAI;AACFG,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,MAAjB;AAEAF,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,MAAjB;AAEA,UAAMZ,GAAG,CAACC,6BAA6B,CAACM,QAAQ,CAACM,IAAV,CAA9B,CAAT;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,OAAjB,EAA0BE,KAA1B;AACA,UAAMT,YAAY,CAACS,KAAD,EAAQZ,wBAAR,CAAlB;AACD;AACF;;AAED,eAAeN,GAAG,CAAC,CACjBC,UAAU,CACR,qDADQ,EAERS,iBAFQ,CADO,CAAD,CAAlB","sourcesContent":["import { all, takeLatest, call, race, put } from \"redux-saga/effects\";\nimport {\n  indexProductCategoriesSuccess,\n  productCategoriesFailure,\n} from \"./actions\";\nimport api from \"~/services/api\";\nimport timer from \"../utils/timer\";\nimport errorHandler from \"../utils/errorHandler\";\n\nfunction* productCategories() {\n  const { response } = yield race({\n    response: call(api.get, \"/assign/category\"),\n    timeout: call(timer),\n  });\n  try {\n    console.tron.log(\"Aqui\");\n\n    console.tron.log(\"DATA\");\n\n    yield put(indexProductCategoriesSuccess(response.data));\n  } catch (error) {\n    console.tron.log(\"error\", error);\n    yield errorHandler(error, productCategoriesFailure);\n  }\n}\n\nexport default all([\n  takeLatest(\n    \"@productCategories/INDEX_PRODUCT_CATEGORIES_REQUEST\",\n    productCategories\n  ),\n]);\n"]},"metadata":{},"sourceType":"module"}