{"ast":null,"code":"import { takeLatest, all, race, put, call, select } from \"redux-saga/effects\";\nimport api from \"../../../services/api\";\nimport { sendCreditCardPayamentSuccess, sendBilletPayamentSuccess, payamentFailure } from \"./actions\";\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\n\nfunction* indexPayaments() {\n  try {\n    const page = yield select(state => state.payament.page);\n    const username = yield select(state => state.user.profile.username);\n\n    const _ref = yield race({\n      response: call(api.get, \"/payament?page=\".concat(page, \"&username=\").concat(username))\n    }),\n          response = _ref.response;\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nfunction* sendCreditCardPayament({\n  payload\n}) {\n  try {\n    const body = payload.body;\n    yield race({\n      response: call(api.post, \"/payament/creditCard\", body),\n      timeout: call(timer)\n    });\n    yield put(sendCreditCardPayamentSuccess());\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nfunction* sendBilletPayament({\n  payload\n}) {\n  try {\n    const body = payload.body;\n    yield race({\n      response: call(api.post, \"/payament/billet\", body),\n      timeout: call(timer)\n    });\n    yield put(sendBilletPayamentSuccess());\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nexport default all([takeLatest(\"@payament/INDEX_PAYAMENTS_REQUEST\", indexPayaments), takeLatest(\"@payament/SEND_CREDIT_CARD_PAYAMENT_REQUEST\", sendCreditCardPayament), takeLatest(\"@payament/SEND_BILLET_PAYAMENT_REQUEST\", sendBilletPayament)]);","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/payament/saga.js"],"names":["takeLatest","all","race","put","call","select","api","sendCreditCardPayamentSuccess","sendBilletPayamentSuccess","payamentFailure","errorHandler","timer","indexPayaments","page","state","payament","username","user","profile","response","get","error","sendCreditCardPayament","payload","body","post","timeout","sendBilletPayament"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,MAA3C,QAAyD,oBAAzD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SACEC,6BADF,EAEEC,yBAFF,EAGEC,eAHF,QAIO,WAJP;AAMA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,UAAUC,cAAV,GAA2B;AACzB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMR,MAAM,CAAES,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,IAA3B,CAAzB;AACA,UAAMG,QAAQ,GAAG,MAAMX,MAAM,CAAES,KAAD,IAAWA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmBF,QAA/B,CAA7B;;AAFE,iBAImB,MAAMd,IAAI,CAAC;AAC9BiB,MAAAA,QAAQ,EAAEf,IAAI,CAACE,GAAG,CAACc,GAAL,2BAA4BP,IAA5B,uBAA6CG,QAA7C;AADgB,KAAD,CAJ7B;AAAA,UAIMG,QAJN,QAIMA,QAJN;AAOH,GAPD,CAOE,OAAOE,KAAP,EAAc;AACd,UAAMX,YAAY,CAACW,KAAD,EAAQZ,eAAR,CAAlB;AACD;AACF;;AAED,UAAUa,sBAAV,CAAiC;AAAEC,EAAAA;AAAF,CAAjC,EAA8C;AAC5C,MAAI;AAAA,UACMC,IADN,GACeD,OADf,CACMC,IADN;AAGF,UAAMtB,IAAI,CAAC;AACTiB,MAAAA,QAAQ,EAAEf,IAAI,CAACE,GAAG,CAACmB,IAAL,EAAW,sBAAX,EAAmCD,IAAnC,CADL;AAETE,MAAAA,OAAO,EAAEtB,IAAI,CAACO,KAAD;AAFJ,KAAD,CAAV;AAKA,UAAMR,GAAG,CAACI,6BAA6B,EAA9B,CAAT;AACD,GATD,CASE,OAAOc,KAAP,EAAc;AACd,UAAMX,YAAY,CAACW,KAAD,EAAQZ,eAAR,CAAlB;AACD;AACF;;AAED,UAAUkB,kBAAV,CAA6B;AAAEJ,EAAAA;AAAF,CAA7B,EAA0C;AACxC,MAAI;AAAA,UACMC,IADN,GACeD,OADf,CACMC,IADN;AAGF,UAAMtB,IAAI,CAAC;AACTiB,MAAAA,QAAQ,EAAEf,IAAI,CAACE,GAAG,CAACmB,IAAL,EAAW,kBAAX,EAA+BD,IAA/B,CADL;AAETE,MAAAA,OAAO,EAAEtB,IAAI,CAACO,KAAD;AAFJ,KAAD,CAAV;AAKA,UAAMR,GAAG,CAACK,yBAAyB,EAA1B,CAAT;AACD,GATD,CASE,OAAOa,KAAP,EAAc;AACd,UAAMX,YAAY,CAACW,KAAD,EAAQZ,eAAR,CAAlB;AACD;AACF;;AAED,eAAeR,GAAG,CAAC,CACjBD,UAAU,CAAC,mCAAD,EAAsCY,cAAtC,CADO,EAEjBZ,UAAU,CACR,6CADQ,EAERsB,sBAFQ,CAFO,EAMjBtB,UAAU,CAAC,wCAAD,EAA2C2B,kBAA3C,CANO,CAAD,CAAlB","sourcesContent":["import { takeLatest, all, race, put, call, select } from \"redux-saga/effects\";\nimport api from \"../../../services/api\";\n\nimport {\n  sendCreditCardPayamentSuccess,\n  sendBilletPayamentSuccess,\n  payamentFailure,\n} from \"./actions\";\n\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\n\nfunction* indexPayaments() {\n  try {\n    const page = yield select((state) => state.payament.page);\n    const username = yield select((state) => state.user.profile.username);\n\n    const { response } = yield race({\n      response: call(api.get, `/payament?page=${page}&username=${username}`),\n    });\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nfunction* sendCreditCardPayament({ payload }) {\n  try {\n    const { body } = payload;\n\n    yield race({\n      response: call(api.post, \"/payament/creditCard\", body),\n      timeout: call(timer),\n    });\n\n    yield put(sendCreditCardPayamentSuccess());\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nfunction* sendBilletPayament({ payload }) {\n  try {\n    const { body } = payload;\n\n    yield race({\n      response: call(api.post, \"/payament/billet\", body),\n      timeout: call(timer),\n    });\n\n    yield put(sendBilletPayamentSuccess());\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nexport default all([\n  takeLatest(\"@payament/INDEX_PAYAMENTS_REQUEST\", indexPayaments),\n  takeLatest(\n    \"@payament/SEND_CREDIT_CARD_PAYAMENT_REQUEST\",\n    sendCreditCardPayament\n  ),\n  takeLatest(\"@payament/SEND_BILLET_PAYAMENT_REQUEST\", sendBilletPayament),\n]);\n"]},"metadata":{},"sourceType":"module"}