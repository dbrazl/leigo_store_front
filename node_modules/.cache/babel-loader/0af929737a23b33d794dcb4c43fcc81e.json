{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/pages/Auth/SignIn/view.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../../../components/Header\";\nimport DesktopForm from \"./components/DesktopForm\";\nimport MobileForm from \"./components/MobileForm\";\n\nfunction View({\n  width,\n  username,\n  setUsername,\n  password,\n  setPassword\n}) {\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), width < 1024 ? React.createElement(MobileForm, {\n    useranme: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(DesktopForm, {\n    useranme: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nView.propTypes = {\n  width: PropTypes.number,\n  username: PropTypes.string,\n  setUsername: PropTypes.func,\n  password: PropTypes.string,\n  setPassword: PropTypes.func,\n  submit: PropTypes.func,\n  signed: PropTypes.bool\n};\nView.defaultProps = {\n  width: window.innerWidth,\n  username: \"\",\n  setUsername: () => {},\n  password: \"\",\n  setPassword: () => {},\n  submit: () => {},\n  signed: false\n};\nexport default View;","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/pages/Auth/SignIn/view.js"],"names":["React","PropTypes","Header","DesktopForm","MobileForm","View","width","username","setUsername","password","setPassword","propTypes","number","string","func","submit","signed","bool","defaultProps","window","innerWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA,QAAhC;AAA0CC,EAAAA;AAA1C,CAAd,EAAuE;AACrE,SACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,KAAK,GAAG,IAAR,GACC,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAQC,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEH,QADZ;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAoBD;;AAEDL,IAAI,CAACM,SAAL,GAAiB;AACfL,EAAAA,KAAK,EAAEL,SAAS,CAACW,MADF;AAEfL,EAAAA,QAAQ,EAAEN,SAAS,CAACY,MAFL;AAGfL,EAAAA,WAAW,EAAEP,SAAS,CAACa,IAHR;AAIfL,EAAAA,QAAQ,EAAER,SAAS,CAACY,MAJL;AAKfH,EAAAA,WAAW,EAAET,SAAS,CAACa,IALR;AAMfC,EAAAA,MAAM,EAAEd,SAAS,CAACa,IANH;AAOfE,EAAAA,MAAM,EAAEf,SAAS,CAACgB;AAPH,CAAjB;AAUAZ,IAAI,CAACa,YAAL,GAAoB;AAClBZ,EAAAA,KAAK,EAAEa,MAAM,CAACC,UADI;AAElBb,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAHH;AAIlBC,EAAAA,QAAQ,EAAE,EAJQ;AAKlBC,EAAAA,WAAW,EAAE,MAAM,CAAE,CALH;AAMlBK,EAAAA,MAAM,EAAE,MAAM,CAAE,CANE;AAOlBC,EAAAA,MAAM,EAAE;AAPU,CAApB;AAUA,eAAeX,IAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"../../../components/Header\";\nimport DesktopForm from \"./components/DesktopForm\";\nimport MobileForm from \"./components/MobileForm\";\n\nfunction View({ width, username, setUsername, password, setPassword }) {\n  return (\n    <>\n      <Header />\n      {width < 1024 ? (\n        <MobileForm\n          useranme={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n      ) : (\n        <DesktopForm\n          useranme={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n      )}\n    </>\n  );\n}\n\nView.propTypes = {\n  width: PropTypes.number,\n  username: PropTypes.string,\n  setUsername: PropTypes.func,\n  password: PropTypes.string,\n  setPassword: PropTypes.func,\n  submit: PropTypes.func,\n  signed: PropTypes.bool,\n};\n\nView.defaultProps = {\n  width: window.innerWidth,\n  username: \"\",\n  setUsername: () => {},\n  password: \"\",\n  setPassword: () => {},\n  submit: () => {},\n  signed: false,\n};\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}