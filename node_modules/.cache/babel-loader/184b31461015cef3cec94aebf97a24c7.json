{"ast":null,"code":"import { takeLatest, all, race, put, call, select } from \"redux-saga/effects\";\nimport api from \"../../../services/api\";\nimport { indexPayamentsRequest, indexPayamentsSuccess, sendCreditCardPayamentSuccess, sendBilletPayamentSuccess, payamentFailure, resetPage } from \"./actions\";\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\n\nfunction* indexPayaments() {\n  try {\n    const page = yield select(state => state.payament.page);\n    const username = yield select(state => state.user.profile.username);\n\n    const _ref = yield race({\n      response: call(api.get, \"/payament?page=1&username=\".concat(username)),\n      timeout: call(timer)\n    }),\n          response = _ref.response;\n\n    yield put(indexPayamentsSuccess(response.data));\n    yield put(indexPayamentsRequest());\n  } catch (error) {\n    yield put(resetPage());\n    console.tron.log(\"Payament\", error);\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nfunction* sendCreditCardPayament({\n  payload\n}) {\n  try {\n    const body = payload.body;\n    yield race({\n      response: call(api.post, \"/payament/creditCard\", body),\n      timeout: call(timer)\n    });\n    yield put(sendCreditCardPayamentSuccess());\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nfunction* sendBilletPayament({\n  payload\n}) {\n  try {\n    const body = payload.body;\n    yield race({\n      response: call(api.post, \"/payament/billet\", body),\n      timeout: call(timer)\n    });\n    yield put(sendBilletPayamentSuccess());\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nexport default all([takeLatest(\"@payament/INDEX_PAYAMENTS_REQUEST\", indexPayaments), takeLatest(\"@payament/SEND_CREDIT_CARD_PAYAMENT_REQUEST\", sendCreditCardPayament), takeLatest(\"@payament/SEND_BILLET_PAYAMENT_REQUEST\", sendBilletPayament)]);","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/payament/saga.js"],"names":["takeLatest","all","race","put","call","select","api","indexPayamentsRequest","indexPayamentsSuccess","sendCreditCardPayamentSuccess","sendBilletPayamentSuccess","payamentFailure","resetPage","errorHandler","timer","indexPayaments","page","state","payament","username","user","profile","response","get","timeout","data","error","console","tron","log","sendCreditCardPayament","payload","body","post","sendBilletPayament"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,MAA3C,QAAyD,oBAAzD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,6BAHF,EAIEC,yBAJF,EAKEC,eALF,EAMEC,SANF,QAOO,WAPP;AASA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,UAAUC,cAAV,GAA2B;AACzB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMX,MAAM,CAAEY,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,IAA3B,CAAzB;AACA,UAAMG,QAAQ,GAAG,MAAMd,MAAM,CAAEY,KAAD,IAAWA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmBF,QAA/B,CAA7B;;AAFE,iBAImB,MAAMjB,IAAI,CAAC;AAC9BoB,MAAAA,QAAQ,EAAElB,IAAI,CAACE,GAAG,CAACiB,GAAL,sCAAuCJ,QAAvC,EADgB;AAE9BK,MAAAA,OAAO,EAAEpB,IAAI,CAACU,KAAD;AAFiB,KAAD,CAJ7B;AAAA,UAIMQ,QAJN,QAIMA,QAJN;;AASF,UAAMnB,GAAG,CAACK,qBAAqB,CAACc,QAAQ,CAACG,IAAV,CAAtB,CAAT;AACA,UAAMtB,GAAG,CAACI,qBAAqB,EAAtB,CAAT;AACD,GAXD,CAWE,OAAOmB,KAAP,EAAc;AACd,UAAMvB,GAAG,CAACS,SAAS,EAAV,CAAT;AACAe,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,UAAjB,EAA6BH,KAA7B;AACA,UAAMb,YAAY,CAACa,KAAD,EAAQf,eAAR,CAAlB;AACD;AACF;;AAED,UAAUmB,sBAAV,CAAiC;AAAEC,EAAAA;AAAF,CAAjC,EAA8C;AAC5C,MAAI;AAAA,UACMC,IADN,GACeD,OADf,CACMC,IADN;AAGF,UAAM9B,IAAI,CAAC;AACToB,MAAAA,QAAQ,EAAElB,IAAI,CAACE,GAAG,CAAC2B,IAAL,EAAW,sBAAX,EAAmCD,IAAnC,CADL;AAETR,MAAAA,OAAO,EAAEpB,IAAI,CAACU,KAAD;AAFJ,KAAD,CAAV;AAKA,UAAMX,GAAG,CAACM,6BAA6B,EAA9B,CAAT;AACD,GATD,CASE,OAAOiB,KAAP,EAAc;AACd,UAAMb,YAAY,CAACa,KAAD,EAAQf,eAAR,CAAlB;AACD;AACF;;AAED,UAAUuB,kBAAV,CAA6B;AAAEH,EAAAA;AAAF,CAA7B,EAA0C;AACxC,MAAI;AAAA,UACMC,IADN,GACeD,OADf,CACMC,IADN;AAGF,UAAM9B,IAAI,CAAC;AACToB,MAAAA,QAAQ,EAAElB,IAAI,CAACE,GAAG,CAAC2B,IAAL,EAAW,kBAAX,EAA+BD,IAA/B,CADL;AAETR,MAAAA,OAAO,EAAEpB,IAAI,CAACU,KAAD;AAFJ,KAAD,CAAV;AAKA,UAAMX,GAAG,CAACO,yBAAyB,EAA1B,CAAT;AACD,GATD,CASE,OAAOgB,KAAP,EAAc;AACd,UAAMb,YAAY,CAACa,KAAD,EAAQf,eAAR,CAAlB;AACD;AACF;;AAED,eAAeV,GAAG,CAAC,CACjBD,UAAU,CAAC,mCAAD,EAAsCe,cAAtC,CADO,EAEjBf,UAAU,CACR,6CADQ,EAER8B,sBAFQ,CAFO,EAMjB9B,UAAU,CAAC,wCAAD,EAA2CkC,kBAA3C,CANO,CAAD,CAAlB","sourcesContent":["import { takeLatest, all, race, put, call, select } from \"redux-saga/effects\";\nimport api from \"../../../services/api\";\n\nimport {\n  indexPayamentsRequest,\n  indexPayamentsSuccess,\n  sendCreditCardPayamentSuccess,\n  sendBilletPayamentSuccess,\n  payamentFailure,\n  resetPage,\n} from \"./actions\";\n\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\n\nfunction* indexPayaments() {\n  try {\n    const page = yield select((state) => state.payament.page);\n    const username = yield select((state) => state.user.profile.username);\n\n    const { response } = yield race({\n      response: call(api.get, `/payament?page=1&username=${username}`),\n      timeout: call(timer),\n    });\n\n    yield put(indexPayamentsSuccess(response.data));\n    yield put(indexPayamentsRequest());\n  } catch (error) {\n    yield put(resetPage());\n    console.tron.log(\"Payament\", error);\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nfunction* sendCreditCardPayament({ payload }) {\n  try {\n    const { body } = payload;\n\n    yield race({\n      response: call(api.post, \"/payament/creditCard\", body),\n      timeout: call(timer),\n    });\n\n    yield put(sendCreditCardPayamentSuccess());\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nfunction* sendBilletPayament({ payload }) {\n  try {\n    const { body } = payload;\n\n    yield race({\n      response: call(api.post, \"/payament/billet\", body),\n      timeout: call(timer),\n    });\n\n    yield put(sendBilletPayamentSuccess());\n  } catch (error) {\n    yield errorHandler(error, payamentFailure);\n  }\n}\n\nexport default all([\n  takeLatest(\"@payament/INDEX_PAYAMENTS_REQUEST\", indexPayaments),\n  takeLatest(\n    \"@payament/SEND_CREDIT_CARD_PAYAMENT_REQUEST\",\n    sendCreditCardPayament\n  ),\n  takeLatest(\"@payament/SEND_BILLET_PAYAMENT_REQUEST\", sendBilletPayament),\n]);\n"]},"metadata":{},"sourceType":"module"}