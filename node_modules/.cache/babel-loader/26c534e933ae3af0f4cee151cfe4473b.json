{"ast":null,"code":"import produce from \"immer\";\nimport _ from \"lodash\";\nconst INITIAL_STATE = {\n  products: []\n};\nexport default function cart(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case \"@cart/ADD_TO_CART\":\n        let oneAdd = state.products.find(item => item.id === action.payload.item.id);\n        console.tron.log(oneAdd.stock < oneAdd.amount + 1);\n\n        if (!!oneAdd && oneAdd.stock < oneAdd.amount + 1) {\n          oneAdd.amount++;\n\n          const unionAdd = _.unionBy([oneAdd], state.products, \"id\");\n\n          draft.products = _.orderBy(unionAdd, [\"name\"], [\"asc\"]);\n        } else {\n          let toAdd = action.payload.item;\n          toAdd.amount = 1;\n\n          const unionAdd = _.unionBy([toAdd], state.products, \"id\");\n\n          draft.products = _.orderBy(unionAdd, [\"name\"], [\"asc\"]);\n        }\n\n        break;\n\n      case \"@cart/REMOVE_ONE_FROM_CART\":\n        let oneRemove = state.products.find(item => item.id === action.payload.item.id);\n\n        if (!!oneRemove && oneRemove.amount > 0) {\n          oneRemove.amount--;\n          if (oneRemove.amount === 0) draft.products = _.differenceBy(state.products, [oneRemove], \"id\");else {\n            const unionRemoveOne = _.unionBy([oneRemove], state.products, \"id\");\n\n            draft.products = _.orderBy(unionRemoveOne, [\"name\"], [\"asc\"]);\n          }\n        } else {\n          draft.products = _.differenceBy(state.products, [action.payload.item], \"id\");\n        }\n\n        break;\n\n      case \"@cart/REMOVE_FROM_CART\":\n        const one = state.products.find(item => item.id === action.payload.item.id);\n        if (!!one) draft.products = _.differenceBy(state.products, [action.payload.item], \"id\");\n        break;\n\n      default:\n    }\n  });\n}","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/cart/reducer.js"],"names":["produce","_","INITIAL_STATE","products","cart","state","action","draft","type","oneAdd","find","item","id","payload","console","tron","log","stock","amount","unionAdd","unionBy","orderBy","toAdd","oneRemove","differenceBy","unionRemoveOne","one"],"mappings":"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","sourcesContent":["import produce from \"immer\";\nimport _ from \"lodash\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nexport default function cart(state = INITIAL_STATE, action) {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case \"@cart/ADD_TO_CART\":\n        let oneAdd = state.products.find(\n          (item) => item.id === action.payload.item.id\n        );\n\n        console.tron.log(oneAdd.stock < oneAdd.amount + 1);\n\n        if (!!oneAdd && oneAdd.stock < oneAdd.amount + 1) {\n          oneAdd.amount++;\n          const unionAdd = _.unionBy([oneAdd], state.products, \"id\");\n          draft.products = _.orderBy(unionAdd, [\"name\"], [\"asc\"]);\n        } else {\n          let toAdd = action.payload.item;\n          toAdd.amount = 1;\n\n          const unionAdd = _.unionBy([toAdd], state.products, \"id\");\n          draft.products = _.orderBy(unionAdd, [\"name\"], [\"asc\"]);\n        }\n        break;\n\n      case \"@cart/REMOVE_ONE_FROM_CART\":\n        let oneRemove = state.products.find(\n          (item) => item.id === action.payload.item.id\n        );\n\n        if (!!oneRemove && oneRemove.amount > 0) {\n          oneRemove.amount--;\n\n          if (oneRemove.amount === 0)\n            draft.products = _.differenceBy(state.products, [oneRemove], \"id\");\n          else {\n            const unionRemoveOne = _.unionBy([oneRemove], state.products, \"id\");\n            draft.products = _.orderBy(unionRemoveOne, [\"name\"], [\"asc\"]);\n          }\n        } else {\n          draft.products = _.differenceBy(\n            state.products,\n            [action.payload.item],\n            \"id\"\n          );\n        }\n        break;\n\n      case \"@cart/REMOVE_FROM_CART\":\n        const one = state.products.find(\n          (item) => item.id === action.payload.item.id\n        );\n\n        if (!!one)\n          draft.products = _.differenceBy(\n            state.products,\n            [action.payload.item],\n            \"id\"\n          );\n        break;\n      default:\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}