{"ast":null,"code":"import { all, takeLatest, call, put, race, select } from \"redux-saga/effects\";\nimport api from \"../../../services/api\";\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\nimport { requestsFailure, indexRequestsSuccess, resetPage, indexRequestsRequest } from \"./actions\";\n\nfunction* indexRequests({\n  payload\n}) {\n  try {\n    const page = yield select(state => state.requests.page);\n    const username = yield select(state => state.user.profile.username);\n\n    const _ref = yield race({\n      response: call(api.get, \"/payament?page=\".concat(page, \"&username=\").concat(username)),\n      timeout: call(timer)\n    }),\n          response = _ref.response;\n\n    yield put(indexRequestsSuccess(response.data));\n    yield put(indexRequestsRequest());\n  } catch (error) {\n    yield put(resetPage());\n    yield errorHandler(error, requestsFailure);\n  }\n}\n\nexport default all([takeLatest(\"@requests/INDEX_REQUESTS_REQUEST\", indexRequests)]);","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/requests/saga.js"],"names":["all","takeLatest","call","put","race","select","api","errorHandler","timer","requestsFailure","indexRequestsSuccess","resetPage","indexRequestsRequest","indexRequests","payload","page","state","requests","username","user","profile","response","get","timeout","data","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,MAA3C,QAAyD,oBAAzD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SACEC,eADF,EAEEC,oBAFF,EAGEC,SAHF,EAIEC,oBAJF,QAKO,WALP;;AAOA,UAAUC,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AACnC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMV,MAAM,CAAEW,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,IAA3B,CAAzB;AACA,UAAMG,QAAQ,GAAG,MAAMb,MAAM,CAAEW,KAAD,IAAWA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmBF,QAA/B,CAA7B;;AAFE,iBAImB,MAAMd,IAAI,CAAC;AAC9BiB,MAAAA,QAAQ,EAAEnB,IAAI,CAACI,GAAG,CAACgB,GAAL,2BAA4BP,IAA5B,uBAA6CG,QAA7C,EADgB;AAE9BK,MAAAA,OAAO,EAAErB,IAAI,CAACM,KAAD;AAFiB,KAAD,CAJ7B;AAAA,UAIMa,QAJN,QAIMA,QAJN;;AASF,UAAMlB,GAAG,CAACO,oBAAoB,CAACW,QAAQ,CAACG,IAAV,CAArB,CAAT;AACA,UAAMrB,GAAG,CAACS,oBAAoB,EAArB,CAAT;AACD,GAXD,CAWE,OAAOa,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACQ,SAAS,EAAV,CAAT;AACA,UAAMJ,YAAY,CAACkB,KAAD,EAAQhB,eAAR,CAAlB;AACD;AACF;;AAED,eAAeT,GAAG,CAAC,CACjBC,UAAU,CAAC,kCAAD,EAAqCY,aAArC,CADO,CAAD,CAAlB","sourcesContent":["import { all, takeLatest, call, put, race, select } from \"redux-saga/effects\";\nimport api from \"../../../services/api\";\n\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\nimport {\n  requestsFailure,\n  indexRequestsSuccess,\n  resetPage,\n  indexRequestsRequest,\n} from \"./actions\";\n\nfunction* indexRequests({ payload }) {\n  try {\n    const page = yield select((state) => state.requests.page);\n    const username = yield select((state) => state.user.profile.username);\n\n    const { response } = yield race({\n      response: call(api.get, `/payament?page=${page}&username=${username}`),\n      timeout: call(timer),\n    });\n\n    yield put(indexRequestsSuccess(response.data));\n    yield put(indexRequestsRequest());\n  } catch (error) {\n    yield put(resetPage());\n    yield errorHandler(error, requestsFailure);\n  }\n}\n\nexport default all([\n  takeLatest(\"@requests/INDEX_REQUESTS_REQUEST\", indexRequests),\n]);\n"]},"metadata":{},"sourceType":"module"}