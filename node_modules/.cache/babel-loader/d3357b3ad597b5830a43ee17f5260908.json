{"ast":null,"code":"import produce from \"immer\";\nimport _ from \"lodash\";\nconst INITIAL_STATE = {\n  products: [],\n  page: 0,\n  status: {\n    loading: false\n  },\n  error: {\n    status: false,\n    message: \"\",\n    reasons: []\n  }\n};\nexport default function products(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case \"@products/INDEX_PRODUCTS_REQUEST\":\n        draft.status.loading = true;\n        draft.error = INITIAL_STATE.error;\n        break;\n\n      case \"@products/INDEX_PRODUCTS_SUCCESS\":\n        let unionIndex = _.unionBy(action.payload.body, state.products, \"id\");\n\n        unionIndex.forEach(product => {\n          product.amount = 0;\n        });\n        draft.status.loading = false;\n        draft.products = _.orderBy(unionIndex, [\"name, category\"], [\"asc\", \"asc\"]);\n        draft.page = state.page + 1;\n        break;\n      // case \"@productCategories/INDEX_PRODUCT_CATEGORIES_SUCCESS\":\n      //   const categories = action.payload.body;\n      //   const products = state.products.map((item) => {\n      //     const category = categories.find(\n      //       (one) => one.product_id_fk === item.id\n      //     );\n      //     if (category) item.category = category;\n      //     return item;\n      //   });\n      //   draft.products = products ? products : [];\n      //   break;\n\n      case \"@products/PRODUCTS_FAILURE\":\n        const _action$payload = action.payload,\n              message = _action$payload.message,\n              reasons = _action$payload.reasons;\n        draft.status.loading = false;\n        draft.error.status = true;\n        draft.error.message = message;\n        draft.error.reasons = reasons;\n        break;\n\n      case \"@products/RESET_PAGE\":\n        draft.page = 0;\n        break;\n\n      case \"@products/RESET_PRODUCTS\":\n        draft.products = [];\n        break;\n\n      default:\n    }\n  });\n}","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/products/reducer.js"],"names":["produce","_","INITIAL_STATE","products","page","status","loading","error","message","reasons","state","action","draft","type","unionIndex","unionBy","payload","body","forEach","product","amount","orderBy"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,IAAI,EAAE,CAFc;AAGpBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAHY;AAMpBC,EAAAA,KAAK,EAAE;AACLF,IAAAA,MAAM,EAAE,KADH;AAELG,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AANa,CAAtB;AAaA,eAAe,SAASN,QAAT,CAAkBO,KAAK,GAAGR,aAA1B,EAAyCS,MAAzC,EAAiD;AAC9D,SAAOX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AAC/B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAK,kCAAL;AACED,QAAAA,KAAK,CAACP,MAAN,CAAaC,OAAb,GAAuB,IAAvB;AACAM,QAAAA,KAAK,CAACL,KAAN,GAAcL,aAAa,CAACK,KAA5B;AACA;;AAEF,WAAK,kCAAL;AACE,YAAIO,UAAU,GAAGb,CAAC,CAACc,OAAF,CAAUJ,MAAM,CAACK,OAAP,CAAeC,IAAzB,EAA+BP,KAAK,CAACP,QAArC,EAA+C,IAA/C,CAAjB;;AAEAW,QAAAA,UAAU,CAACI,OAAX,CAAoBC,OAAD,IAAa;AAC9BA,UAAAA,OAAO,CAACC,MAAR,GAAiB,CAAjB;AACD,SAFD;AAIAR,QAAAA,KAAK,CAACP,MAAN,CAAaC,OAAb,GAAuB,KAAvB;AACAM,QAAAA,KAAK,CAACT,QAAN,GAAiBF,CAAC,CAACoB,OAAF,CACfP,UADe,EAEf,CAAC,gBAAD,CAFe,EAGf,CAAC,KAAD,EAAQ,KAAR,CAHe,CAAjB;AAKAF,QAAAA,KAAK,CAACR,IAAN,GAAaM,KAAK,CAACN,IAAN,GAAa,CAA1B;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;AAEA,WAAK,4BAAL;AAAA,gCAC+BO,MAAM,CAACK,OADtC;AAAA,cACUR,OADV,mBACUA,OADV;AAAA,cACmBC,OADnB,mBACmBA,OADnB;AAEEG,QAAAA,KAAK,CAACP,MAAN,CAAaC,OAAb,GAAuB,KAAvB;AACAM,QAAAA,KAAK,CAACL,KAAN,CAAYF,MAAZ,GAAqB,IAArB;AACAO,QAAAA,KAAK,CAACL,KAAN,CAAYC,OAAZ,GAAsBA,OAAtB;AACAI,QAAAA,KAAK,CAACL,KAAN,CAAYE,OAAZ,GAAsBA,OAAtB;AACA;;AAEF,WAAK,sBAAL;AACEG,QAAAA,KAAK,CAACR,IAAN,GAAa,CAAb;AACA;;AAEF,WAAK,0BAAL;AACEQ,QAAAA,KAAK,CAACT,QAAN,GAAiB,EAAjB;AACA;;AAEF;AArDF;AAuDD,GAxDa,CAAd;AAyDD","sourcesContent":["import produce from \"immer\";\nimport _ from \"lodash\";\n\nconst INITIAL_STATE = {\n  products: [],\n  page: 0,\n  status: {\n    loading: false,\n  },\n  error: {\n    status: false,\n    message: \"\",\n    reasons: [],\n  },\n};\n\nexport default function products(state = INITIAL_STATE, action) {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case \"@products/INDEX_PRODUCTS_REQUEST\":\n        draft.status.loading = true;\n        draft.error = INITIAL_STATE.error;\n        break;\n\n      case \"@products/INDEX_PRODUCTS_SUCCESS\":\n        let unionIndex = _.unionBy(action.payload.body, state.products, \"id\");\n\n        unionIndex.forEach((product) => {\n          product.amount = 0;\n        });\n\n        draft.status.loading = false;\n        draft.products = _.orderBy(\n          unionIndex,\n          [\"name, category\"],\n          [\"asc\", \"asc\"]\n        );\n        draft.page = state.page + 1;\n        break;\n\n      // case \"@productCategories/INDEX_PRODUCT_CATEGORIES_SUCCESS\":\n      //   const categories = action.payload.body;\n      //   const products = state.products.map((item) => {\n      //     const category = categories.find(\n      //       (one) => one.product_id_fk === item.id\n      //     );\n\n      //     if (category) item.category = category;\n\n      //     return item;\n      //   });\n\n      //   draft.products = products ? products : [];\n      //   break;\n\n      case \"@products/PRODUCTS_FAILURE\":\n        const { message, reasons } = action.payload;\n        draft.status.loading = false;\n        draft.error.status = true;\n        draft.error.message = message;\n        draft.error.reasons = reasons;\n        break;\n\n      case \"@products/RESET_PAGE\":\n        draft.page = 0;\n        break;\n\n      case \"@products/RESET_PRODUCTS\":\n        draft.products = [];\n        break;\n\n      default:\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}