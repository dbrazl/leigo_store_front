{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nexport default function* errorHandler(error, callback) {\n  let message = null;\n  let reasons = null;\n\n  treat: {\n    if (error.message === \"Network Error\") {\n      message = \"Não foi possível fazer a requisição.\";\n      reasons = [\"Servidor está offline.\"];\n      break treat;\n    }\n\n    if (error.message === \"Timeout\") {\n      message = \"Não foi possível fazer a requisição.\";\n      reasons = [\"A requisição excedeu o tempo limite.\"];\n      break treat;\n    }\n\n    if (error.message === \"No data on restore\") {\n      message = \"Não foi possível recuperar o usuário.\";\n      reasons = [\"O usuário não foi informado.\"];\n      break treat;\n    }\n\n    const response = JSON.parse(error.response.request._response);\n    console.tron.log(\"Error\");\n    message = response.message;\n    reasons = response.reasons;\n  }\n\n  yield put(callback(message, reasons));\n}","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/utils/errorHandler.js"],"names":["put","errorHandler","error","callback","message","reasons","treat","response","JSON","parse","request","_response","console","tron","log"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AAEA,eAAe,UAAUC,YAAV,CAAuBC,KAAvB,EAA8BC,QAA9B,EAAwC;AACrD,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,OAAO,GAAG,IAAd;;AAEAC,EAAAA,KAAK,EAAE;AACL,QAAIJ,KAAK,CAACE,OAAN,KAAkB,eAAtB,EAAuC;AACrCA,MAAAA,OAAO,GAAG,sCAAV;AACAC,MAAAA,OAAO,GAAG,CAAC,wBAAD,CAAV;AACA,YAAMC,KAAN;AACD;;AAED,QAAIJ,KAAK,CAACE,OAAN,KAAkB,SAAtB,EAAiC;AAC/BA,MAAAA,OAAO,GAAG,sCAAV;AACAC,MAAAA,OAAO,GAAG,CAAC,sCAAD,CAAV;AACA,YAAMC,KAAN;AACD;;AAED,QAAIJ,KAAK,CAACE,OAAN,KAAkB,oBAAtB,EAA4C;AAC1CA,MAAAA,OAAO,GAAG,uCAAV;AACAC,MAAAA,OAAO,GAAG,CAAC,8BAAD,CAAV;AACA,YAAMC,KAAN;AACD;;AAED,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACK,QAAN,CAAeG,OAAf,CAAuBC,SAAlC,CAAjB;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,OAAjB;AACAV,IAAAA,OAAO,GAAGG,QAAQ,CAACH,OAAnB;AACAC,IAAAA,OAAO,GAAGE,QAAQ,CAACF,OAAnB;AACD;;AAED,QAAML,GAAG,CAACG,QAAQ,CAACC,OAAD,EAAUC,OAAV,CAAT,CAAT;AACD","sourcesContent":["import { put } from \"redux-saga/effects\";\n\nexport default function* errorHandler(error, callback) {\n  let message = null;\n  let reasons = null;\n\n  treat: {\n    if (error.message === \"Network Error\") {\n      message = \"Não foi possível fazer a requisição.\";\n      reasons = [\"Servidor está offline.\"];\n      break treat;\n    }\n\n    if (error.message === \"Timeout\") {\n      message = \"Não foi possível fazer a requisição.\";\n      reasons = [\"A requisição excedeu o tempo limite.\"];\n      break treat;\n    }\n\n    if (error.message === \"No data on restore\") {\n      message = \"Não foi possível recuperar o usuário.\";\n      reasons = [\"O usuário não foi informado.\"];\n      break treat;\n    }\n\n    const response = JSON.parse(error.response.request._response);\n    console.tron.log(\"Error\");\n    message = response.message;\n    reasons = response.reasons;\n  }\n\n  yield put(callback(message, reasons));\n}\n"]},"metadata":{},"sourceType":"module"}