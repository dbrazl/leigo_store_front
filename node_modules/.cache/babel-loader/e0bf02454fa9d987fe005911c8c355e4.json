{"ast":null,"code":"import { takeLatest, all, put, call, race } from \"redux-saga/effects\";\nimport api from \"../../../services/api\";\nimport history from \"../../../services/history\";\nimport { signInSuccess, signFailure, signUpSuccess, restoreAccountSuccess } from \"./actions\";\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\n\nfunction* signIn({\n  payload\n}) {\n  try {\n    const body = payload.body;\n\n    const _ref = yield race({\n      response: call(api.post, \"/session\", body),\n      timeout: call(timer)\n    }),\n          response = _ref.response;\n\n    const token = response.data.token;\n    api.defaults.headers.Authorization = \"Bearer \".concat(token);\n    history.push(\"/account\");\n    yield put(signInSuccess(response.data));\n  } catch (error) {\n    yield errorHandler(error, signFailure);\n  }\n}\n\nfunction* signUp({\n  payload\n}) {\n  try {\n    const body = payload.body;\n\n    const _ref2 = yield race({\n      response: call(api.post, \"/user\", body),\n      timeout: call(timer)\n    }),\n          response = _ref2.response;\n\n    yield put(signUpSuccess(response.body));\n  } catch (error) {\n    yield errorHandler(error, signFailure);\n  }\n}\n\nfunction* restoreAccount({\n  payload\n}) {\n  try {\n    const username = payload.params.username;\n\n    const _ref3 = yield race({\n      response: call(api.put, \"/restore/\".concat(username)),\n      timeout: call(timer)\n    }),\n          response = _ref3.response;\n\n    yield put(restoreAccountSuccess(response.data));\n  } catch (error) {\n    yield errorHandler(error, signFailure);\n  }\n}\n\nexport function signOut() {\n  api.defaults.headers.Authorization = null;\n  history.push(\"/\");\n}\nexport default all([takeLatest(\"@auth/SIGN_IN_REQUEST\", signIn), takeLatest(\"@auth/SIGN_UP_REQUEST\", signUp), takeLatest(\"@auth/RESTORE_ACCOUNT_SUCCESS\", restoreAccount, takeLatest(\"@auth/SIGN_OUT\", signOut))]);","map":{"version":3,"sources":["/home/daniel/Documents/Projetos/Software/Web/Reactjs/leigo_store/src/store/modules/auth/saga.js"],"names":["takeLatest","all","put","call","race","api","history","signInSuccess","signFailure","signUpSuccess","restoreAccountSuccess","errorHandler","timer","signIn","payload","body","response","post","timeout","token","data","defaults","headers","Authorization","push","error","signUp","restoreAccount","username","params","signOut"],"mappings":"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","sourcesContent":["import { takeLatest, all, put, call, race } from \"redux-saga/effects\";\nimport api from \"../../../services/api\";\nimport history from \"~/services/history\";\n\nimport {\n  signInSuccess,\n  signFailure,\n  signUpSuccess,\n  restoreAccountSuccess,\n} from \"./actions\";\n\nimport errorHandler from \"../utils/errorHandler\";\nimport timer from \"../utils/timer\";\n\nfunction* signIn({ payload }) {\n  try {\n    const { body } = payload;\n\n    const { response } = yield race({\n      response: call(api.post, \"/session\", body),\n      timeout: call(timer),\n    });\n\n    const { token } = response.data;\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n    history.push(\"/account\");\n\n    yield put(signInSuccess(response.data));\n  } catch (error) {\n    yield errorHandler(error, signFailure);\n  }\n}\n\nfunction* signUp({ payload }) {\n  try {\n    const { body } = payload;\n\n    const { response } = yield race({\n      response: call(api.post, \"/user\", body),\n      timeout: call(timer),\n    });\n\n    yield put(signUpSuccess(response.body));\n  } catch (error) {\n    yield errorHandler(error, signFailure);\n  }\n}\n\nfunction* restoreAccount({ payload }) {\n  try {\n    const { username } = payload.params;\n\n    const { response } = yield race({\n      response: call(api.put, `/restore/${username}`),\n      timeout: call(timer),\n    });\n\n    yield put(restoreAccountSuccess(response.data));\n  } catch (error) {\n    yield errorHandler(error, signFailure);\n  }\n}\n\nexport function signOut() {\n  api.defaults.headers.Authorization = null;\n\n  history.push(\"/\");\n}\n\nexport default all([\n  takeLatest(\"@auth/SIGN_IN_REQUEST\", signIn),\n  takeLatest(\"@auth/SIGN_UP_REQUEST\", signUp),\n  takeLatest(\n    \"@auth/RESTORE_ACCOUNT_SUCCESS\",\n    restoreAccount,\n    takeLatest(\"@auth/SIGN_OUT\", signOut)\n  ),\n]);\n"]},"metadata":{},"sourceType":"module"}